{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavBar","react_default","Fragment","Grid","item","md","StyledNavLink","to","activeStyle","color","StyledEmailLink","href","Header","siteTitle","StyledContainer","StyledGridContainer","container","spacing","xs","sm","lg","StyledHeaderNameDiv","StyledNavLinkName","StyledHeaderDiv","StyledGridHeaderLink","direction","justify","alignItems","header_NavBar","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","Link","_templateObject8","_templateObject9","_templateObject10","Layout","gatsby_browser_entry","header","layout_StyledContainer","StyledFooterDiv","Date","getFullYear","_755544856","node","layout_templateObject","layout_templateObject2"],"mappings":"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","file":"component---src-pages-404-js-13ce0f87842481608d6c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link } from \"gatsby\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Container from \"@material-ui/core/Container\"\nimport styled from \"styled-components\"\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <Grid item md={3}>\n        <StyledNavLink to=\"/\" activeStyle={{ color: \"black\" }}>\n          Projects\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item md={3}>\n        <StyledNavLink to=\"/about\" activeStyle={{ color: \"black\" }}>\n          About\n        </StyledNavLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"https://github.com/vt0826\">\n          GitHub\n        </StyledEmailLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">\n          Contact\n        </StyledEmailLink>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst NavBarMobile = () => {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <StyledNavLink to=\"/\" activeClassName=\"active\">\n          P\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item xs={4}>\n        <StyledNavLink to=\"/about\" activeClassName=\"active\">\n          A\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item xs={4}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">G</StyledEmailLink>\n      </Grid>\n      <Grid item xs={4}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">C</StyledEmailLink>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <StyledContainer>\n      <StyledGridContainer container spacing={1}>\n        <Grid item xs={12} sm={5} lg={9}>\n          <StyledHeaderNameDiv>\n            <StyledNavLinkName to=\"/\">{siteTitle}</StyledNavLinkName>\n          </StyledHeaderNameDiv>\n        </Grid>\n\n        <Grid item xs={12} sm={7} lg={3}>\n          <StyledHeaderDiv>\n            <StyledGridHeaderLink\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <NavBar />\n            </StyledGridHeaderLink>\n          </StyledHeaderDiv>\n          {/*\n          <StyledMobileHeaderDiv>\n            <StyledGridHeaderMobileLink container>\n              <NavBarMobile />\n            </StyledGridHeaderMobileLink>\n          </StyledMobileHeaderDiv>\n          */}\n        </Grid>\n      </StyledGridContainer>\n    </StyledContainer>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst StyledGridContainer = styled(Grid)`\n  display: flex;\n  justify-content: space-between;\n`\nconst StyledHeaderNameDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\nconst StyledGridHeaderLink = styled(Grid)`\n  padding-left: 20px;\n  padding-right: 20px;\n\n  width: 100%;\n  direction: row;\n  display: flex;\n  justify-content: space-between;\n`\nconst StyledGridHeaderMobileLink = styled(Grid)`\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n`\nconst StyledHeaderDiv = styled.div`\n  display: inline;\n  @media (min-width: 500px) {\n    display: inline;\n  }\n`\nconst StyledMobileHeaderDiv = styled.div`\n  display: none;\n  @media (min-width: 500px) {\n    display: none;\n  }\n`\n\nconst StyledNavLinkName = styled(Link)`\n  color: black;\n  display: inline;\n  align: left;\n  font-size: 0.7em;\n  line-height: 1.6em;\n  text-transform: uppercase;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\nconst StyledNavLink = styled(Link)`\n  font-size: 0.7em;\n  display: block;\n\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\nconst StyledEmailLink = styled.a`\n  font-size: 0.7em;\n  display: block;\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled from \"styled-components\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n\n        <footer>\n          <StyledContainer>\n            <StyledFooterDiv>\n              © {new Date().getFullYear()}, Develop By Victor Tsay\n            </StyledFooterDiv>\n          </StyledContainer>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n`\nconst StyledFooterDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\n"],"sourceRoot":""}