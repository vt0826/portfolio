{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/order.png","webpack:///./src/images/property.png","webpack:///./src/images/inventory.png"],"names":["Order","react_default","a","createElement","Fragment","StyledProjectContainer","href","StyledImage","className","src","require","StyledProjectTitleDiv","StyledProjectName","StyleMiddleWrapper","StyledDescriptionText","classsName","Grid","container","StyledGridButton","xs","StyledButton","size","variant","color","Property","Inventory","Project","props","_this","_React$Component","call","this","state","render","StyledContainer","seo","title","spacing","item","sm","StyledProjectDiv","project_Order","project_Property","project_Inventory","React","Component","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","h3","_templateObject5","_templateObject6","img","_templateObject7","_templateObject8","_templateObject9","Button","_templateObject10","withStyles","root","border","label","textTransform","IndexPage","layout","keywords","project","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavBar","md","StyledNavLink","to","activeStyle","StyledEmailLink","Header","siteTitle","StyledGridContainer","lg","StyledHeaderNameDiv","StyledNavLinkName","StyledHeaderDiv","StyledGridHeaderLink","direction","justify","alignItems","header_NavBar","Link","Layout","gatsby_browser_entry","header","layout_StyledContainer","StyledFooterDiv","Date","getFullYear","_755544856","node","layout_templateObject","layout_templateObject2","p"],"mappings":"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","file":"component---src-pages-index-js-99fe72931dd90c7eb5a5.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport GridList from \"@material-ui/core/GridList\"\nimport GridListTile from \"@material-ui/core/GridListTile\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {\n  createMuiTheme,\n  withStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\"\nimport styled from \"styled-components\"\n\nconst Order = () => {\n  return (\n    <React.Fragment>\n      <StyledProjectContainer>\n        <a href=\"http://order.thyhive.com\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/order.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Order </StyledProjectName>\n        </StyledProjectTitleDiv>\n\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            A mobile first design platform that can help family and friends to\n            order a batch of goods as a group.\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </React.Fragment>\n  )\n}\n\nconst Property = () => {\n  return (\n    <React.Fragment>\n      <StyledProjectContainer>\n        <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/property.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Property </StyledProjectName>\n        </StyledProjectTitleDiv>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            A quick and esay way to find out your property's worth\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </React.Fragment>\n  )\n}\n\nconst Inventory = () => {\n  return (\n    <div>\n      <StyledProjectContainer>\n        <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/inventory.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Inventory </StyledProjectName>\n        </StyledProjectTitleDiv>\n\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            online inventory management to help you take control of your\n            business\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </div>\n  )\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <StyledContainer>\n        <SEO title=\"Projects\" />\n        <Grid container spacing={10}>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Order />\n            </StyledProjectDiv>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Property />\n            </StyledProjectDiv>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Inventory />\n            </StyledProjectDiv>\n          </Grid>\n        </Grid>\n      </StyledContainer>\n    )\n  }\n}\nexport default Project\n\n//Styled\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StyledProjectContainer = styled.div`\n  position: relative;\n  width: 100%;\n  :hover .webImage {\n    opacity: 0.5;\n  }\n  :hover > .middleWarpper {\n    opacity: 0.5;\n  }\n`\n\nconst StyledProjectDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\nconst StyledProjectTitleDiv = styled.div`\n  text-align: center;\n`\nconst StyledProjectName = styled.h3`\n  margin-bottom: 8px;\n  letter-spacing: 0.02em;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  text-decoration: none;\n  color: rgb(79, 79, 79);\n`\n\nconst StyleMiddleWrapper = styled.div`\n  transition: 0.5s ease;\n  height: 35%;\n\n  text-align: center;\n\n  @media (min-width: 500px) {\n    background-color: black;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    opacity: 0;\n  }\n`\nconst StyledImage = styled.img`\n  margin-bottom: 8px;\n  opacity: 1;\n  display: block;\n  width: 100%;\n  height: auto;\n  transition: 0.5s ease;\n  backface-visibility: hidden;\n\n  ${StyledContainer}:hover & {\n   opacity:0:7;\n  }\n`\nconst StyledDescriptionText = styled.div`\n  margin-bottom: 8px;\n  font-size: 0.8em;\n  text-align: left;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  color: rgb(79, 79, 79);\n\n  @media (min-width: 500px) {\n    color: white;\n\n    padding: 16px 32px;\n  }\n`\nconst StyledGridButton = styled(Grid)`\n  display: block;\n`\nconst StyledButton1 = styled(Button)`\n  color: white;\n  margin: 40px;\n\n  @media (min-width: 500px) {\n    color: white;\n  }\n`\nconst StyledButton = withStyles({\n  root: {\n    border: 0,\n    color: \"white\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n})(Button)\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Project from \"../components/project\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Project />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link } from \"gatsby\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Container from \"@material-ui/core/Container\"\nimport styled from \"styled-components\"\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <Grid item md={3}>\n        <StyledNavLink to=\"/\" activeStyle={{ color: \"black\" }}>\n          Projects\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item md={3}>\n        <StyledNavLink to=\"/about\" activeStyle={{ color: \"black\" }}>\n          About\n        </StyledNavLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"https://github.com/vt0826\">\n          GitHub\n        </StyledEmailLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">\n          Contact\n        </StyledEmailLink>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst NavBarMobile = () => {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <StyledNavLink to=\"/\" activeClassName=\"active\">\n          P\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item xs={4}>\n        <StyledNavLink to=\"/about\" activeClassName=\"active\">\n          A\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item xs={4}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">G</StyledEmailLink>\n      </Grid>\n      <Grid item xs={4}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">C</StyledEmailLink>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <StyledContainer>\n      <StyledGridContainer container spacing={1}>\n        <Grid item xs={12} sm={5} lg={9}>\n          <StyledHeaderNameDiv>\n            <StyledNavLinkName to=\"/\">{siteTitle}</StyledNavLinkName>\n          </StyledHeaderNameDiv>\n        </Grid>\n\n        <Grid item xs={12} sm={7} lg={3}>\n          <StyledHeaderDiv>\n            <StyledGridHeaderLink\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <NavBar />\n            </StyledGridHeaderLink>\n          </StyledHeaderDiv>\n          {/*\n          <StyledMobileHeaderDiv>\n            <StyledGridHeaderMobileLink container>\n              <NavBarMobile />\n            </StyledGridHeaderMobileLink>\n          </StyledMobileHeaderDiv>\n          */}\n        </Grid>\n      </StyledGridContainer>\n    </StyledContainer>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst StyledGridContainer = styled(Grid)`\n  display: flex;\n  justify-content: space-between;\n`\nconst StyledHeaderNameDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\nconst StyledGridHeaderLink = styled(Grid)`\n  padding-left: 20px;\n  padding-right: 20px;\n\n  width: 100%;\n  direction: row;\n  display: flex;\n  justify-content: space-between;\n`\nconst StyledGridHeaderMobileLink = styled(Grid)`\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n`\nconst StyledHeaderDiv = styled.div`\n  display: inline;\n  @media (min-width: 500px) {\n    display: inline;\n  }\n`\nconst StyledMobileHeaderDiv = styled.div`\n  display: none;\n  @media (min-width: 500px) {\n    display: none;\n  }\n`\n\nconst StyledNavLinkName = styled(Link)`\n  color: black;\n  display: inline;\n  align: left;\n  font-size: 0.7em;\n  line-height: 1.6em;\n  text-transform: uppercase;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\nconst StyledNavLink = styled(Link)`\n  font-size: 0.7em;\n  display: block;\n\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\nconst StyledEmailLink = styled.a`\n  font-size: 0.7em;\n  display: block;\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 500px) {\n    font-size: 1em;\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled from \"styled-components\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n\n        <footer>\n          <StyledContainer>\n            <StyledFooterDiv>\n              © {new Date().getFullYear()}, Develop By Victor Tsay\n            </StyledFooterDiv>\n          </StyledContainer>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n`\nconst StyledFooterDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\n","module.exports = __webpack_public_path__ + \"static/order-7e7ef1f1dbffd20da1fff9f1e23f9323.png\";","module.exports = __webpack_public_path__ + \"static/property-66da1c28f6262499e6619b63b7468f60.png\";","module.exports = __webpack_public_path__ + \"static/inventory-9f8797bc918ba1e5c9ac5dde72dc9c39.png\";"],"sourceRoot":""}