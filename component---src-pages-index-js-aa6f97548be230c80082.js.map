{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/order.png","webpack:///./src/images/property.png","webpack:///./src/images/inventory.png","webpack:///./src/images/catmint.png"],"names":["Order","react_default","a","createElement","Fragment","StyledProjectContainer","href","StyledImage","className","src","require","StyledProjectTitleDiv","StyledProjectName","StyleMiddleWrapper","StyledDescriptionText","classsName","Grid","container","StyledGridButton","xs","StyledButton","size","variant","color","Property","Inventory","StyledContainer","React","Component","styled","div","withConfig","displayName","componentId","StyledProjectDiv","h3","img","Button","withStyles","root","border","label","textTransform","pages_StyledProjectContainer","StyledMiddleContainer","pages_StyleMiddleWrapper","pages_StyledProjectTitleDiv","pages_StyledProjectName","pages_StyledDescriptionText","direction","justify","alignItems","item","StyledProjectLink","pages_StyledImage","Catmint","IndexPage","layout","seo","title","spacing","sm","pages_StyledProjectDiv","pages_Order","pages_Property","pages_Catmint","pages_Inventory","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavBar","md","StyledNavLink","to","activeStyle","StyledEmailLink","Header","siteTitle","StyledGridContainer","lg","StyledNavLinkName","StyledGridHeaderLink","header_NavBar","Link","Layout","gatsby_browser_entry","Container","maxWidth","header","StyledFooterText","Date","getFullYear","_755544856","node","h6","p"],"mappings":"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","file":"component---src-pages-index-js-aa6f97548be230c80082.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport GridList from \"@material-ui/core/GridList\"\nimport GridListTile from \"@material-ui/core/GridListTile\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {\n  createMuiTheme,\n  withStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\"\nimport styled from \"styled-components\"\n\nconst Order = () => {\n  return (\n    <React.Fragment>\n      <StyledProjectContainer>\n        <a href=\"http://order.thyhive.com\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/order.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Order </StyledProjectName>\n        </StyledProjectTitleDiv>\n\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            A mobile first design platform that can help family and friends to\n            order a batch of goods as a group.\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </React.Fragment>\n  )\n}\n\nconst Property = () => {\n  return (\n    <React.Fragment>\n      <StyledProjectContainer>\n        <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/property.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Property </StyledProjectName>\n        </StyledProjectTitleDiv>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            A quick and esay way to find out your property's worth\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </React.Fragment>\n  )\n}\n\nconst Inventory = () => {\n  return (\n    <div>\n      <StyledProjectContainer>\n        <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n          <StyledImage\n            className=\"webImage\"\n            src={require(\"../images/inventory.png\")}\n          />\n        </a>\n        <StyledProjectTitleDiv>\n          <StyledProjectName>Inventory </StyledProjectName>\n        </StyledProjectTitleDiv>\n\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledDescriptionText classsName=\"descriptionText\">\n            online inventory management to help you take control of your\n            business\n          </StyledDescriptionText>\n          <Grid container>\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"http://order.thyhive.com\"\n              >\n                Go To Site\n              </StyledButton>\n            </StyledGridButton>\n\n            <StyledGridButton xs={6}>\n              <StyledButton\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                GitHub\n              </StyledButton>\n            </StyledGridButton>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledProjectContainer>\n    </div>\n  )\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SEO title=\"Projects\" />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Order />\n            </StyledProjectDiv>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Property />\n            </StyledProjectDiv>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StyledProjectDiv>\n              <Inventory />\n            </StyledProjectDiv>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\nexport default Project\n\n//Styled\nconst StyledContainer = styled.div`\n  margin: 0 auto;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 1728;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StyledProjectContainer = styled.div`\n  position: relative;\n  width: 100%;\n  :hover .webImage {\n    opacity: 0.5;\n  }\n  :hover > .middleWarpper {\n    opacity: 0.5;\n  }\n`\n\nconst StyledProjectDiv = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`\nconst StyledProjectTitleDiv = styled.div`\n  text-align: center;\n`\nconst StyledProjectName = styled.h3`\n  margin-bottom: 8px;\n  letter-spacing: 0.02em;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  text-decoration: none;\n  color: rgb(79, 79, 79);\n`\n\nconst StyleMiddleWrapper = styled.div`\n  transition: 0.5s ease;\n  height: 35%;\n\n  text-align: center;\n\n  @media (min-width: 500px) {\n    background-color: black;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    opacity: 0;\n  }\n`\nconst StyledImage = styled.img`\n  margin-bottom: 8px;\n  opacity: 1;\n  display: block;\n  width: 100%;\n  height: auto;\n  transition: 0.5s ease;\n  backface-visibility: hidden;\n\n  ${StyledContainer}:hover & {\n   opacity:0:7;\n  }\n`\nconst StyledDescriptionText = styled.div`\n  margin-bottom: 8px;\n  font-size: 0.8em;\n  text-align: left;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  color: rgb(79, 79, 79);\n\n  @media (min-width: 500px) {\n    color: white;\n\n    padding: 16px 32px;\n  }\n`\nconst StyledGridButton = styled(Grid)`\n  display: block;\n`\nconst StyledButton1 = styled(Button)`\n  color: white;\n  margin: 40px;\n\n  @media (min-width: 500px) {\n    color: white;\n  }\n`\nconst StyledButton = withStyles({\n  root: {\n    border: 0,\n    color: \"white\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n})(Button)\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Project from \"../components/project\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport styled from \"styled-components\"\n\nimport { Link } from \"gatsby\"\nconst Order = () => {\n  return (\n    <StyledProjectContainer>\n      <StyledMiddleContainer>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledProjectTitleDiv>\n            <StyledProjectName>Order </StyledProjectName>\n          </StyledProjectTitleDiv>\n\n          <StyledDescriptionText classsName=\"descriptionText\">\n            help family and friends to order a batch of goods as a group.\n          </StyledDescriptionText>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              <StyledProjectLink href=\"http://order.thyhive.com\">\n                Go To Site\n              </StyledProjectLink>\n            </Grid>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledMiddleContainer>\n      <a href=\"http://order.thyhive.com\">\n        <StyledImage\n          className=\"webImage\"\n          src={require(\"../images/order.png\")}\n        />\n      </a>\n    </StyledProjectContainer>\n  )\n}\n\nconst Property = () => {\n  return (\n    <StyledProjectContainer>\n      <StyledMiddleContainer>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledProjectTitleDiv>\n            <StyledProjectName>Property </StyledProjectName>\n          </StyledProjectTitleDiv>\n\n          <StyledDescriptionText classsName=\"descriptionText\">\n            A quick and esay way to find out your property's worth\n          </StyledDescriptionText>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={6}>\n              <StyledProjectLink href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n                Go To Site\n              </StyledProjectLink>\n            </Grid>\n\n            <Grid item xs={6}>\n              <StyledProjectLink href=\"https://github.com/vt0826/property\">\n                GitHub\n              </StyledProjectLink>\n            </Grid>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledMiddleContainer>\n      <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n        <StyledImage\n          className=\"webImage\"\n          src={require(\"../images/property.png\")}\n        />\n      </a>\n    </StyledProjectContainer>\n  )\n}\n\nconst Catmint = () => {\n  return (\n    <StyledProjectContainer>\n      <StyledMiddleContainer>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledProjectTitleDiv>\n            <StyledProjectName>Catmint Wheel Cake </StyledProjectName>\n          </StyledProjectTitleDiv>\n\n          <StyledDescriptionText classsName=\"descriptionText\">\n            Website for local desert store.\n          </StyledDescriptionText>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              <StyledProjectLink href=\"https://www.catmintwheelcake.com\">\n                Go To Site\n              </StyledProjectLink>\n            </Grid>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledMiddleContainer>\n      <a href=\"https://www.catmintwheelcake.com\">\n        <StyledImage\n          className=\"webImage\"\n          src={require(\"../images/catmint.png\")}\n        />\n      </a>\n    </StyledProjectContainer>\n  )\n}\n\nconst Inventory = () => {\n  return (\n    <StyledProjectContainer>\n      <StyledMiddleContainer>\n        <StyleMiddleWrapper className=\"middleWarpper\">\n          <StyledProjectTitleDiv>\n            <StyledProjectName>Inventory </StyledProjectName>\n          </StyledProjectTitleDiv>\n\n          <StyledDescriptionText classsName=\"descriptionText\">\n            online inventory management to help you take control of your\n            business\n          </StyledDescriptionText>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              <StyledProjectLink href=\"https://github.com/vt0826/inventory\">\n                GitHub\n              </StyledProjectLink>\n            </Grid>\n          </Grid>\n        </StyleMiddleWrapper>\n      </StyledMiddleContainer>\n      <a href=\"https://musing-lamarr-e2a2c5.netlify.com/\">\n        <StyledImage\n          className=\"webImage\"\n          src={require(\"../images/inventory.png\")}\n        />\n      </a>\n    </StyledProjectContainer>\n  )\n}\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Projects\" />\n    <Grid container spacing={6}>\n      <Grid item xs={12} sm={6}>\n        <StyledProjectDiv>\n          <Order />\n        </StyledProjectDiv>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <StyledProjectDiv>\n          <Property />\n        </StyledProjectDiv>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <StyledProjectDiv>\n          <Catmint />\n        </StyledProjectDiv>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <StyledProjectDiv>\n          <Inventory />\n        </StyledProjectDiv>\n      </Grid>\n    </Grid>\n\n    {/*\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Project />\n    */}\n  </Layout>\n)\n\nexport default IndexPage\n\n//Styled\nconst StyledProjectContainer = styled.div`\n  position: relative;\n  width: 100%;\n  :hover > .middleWarpper {\n    opacity: 1;\n  }\n`\n\nconst StyledProjectDiv = styled.div``\nconst StyledProjectTitleDiv = styled.div`\n  text-align: center;\n`\nconst StyledProjectName = styled.h3`\n  margin-bottom: 8px;\n  letter-spacing: 0.02em;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  text-decoration: none;\n  color: rgb(79, 79, 79);\n`\n\nconst StyledMiddleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst StyleMiddleWrapper = styled.div`\n  margin: auto;\n  @media (min-width: 500px) {\n    margin-bottom: 12px;\n  }\n`\nconst StyledImage = styled.img`\n  margin-bottom: 8px;\n  opacity: 1;\n  display: block;\n  width: 100%;\n  height: auto;\n  transition: 0.5s ease;\n  backface-visibility: hidden;\n  @media (min-width: 600px) {\n    :hover {\n      opacity: 0.8;\n    }\n  }\n`\nconst StyledDescriptionText = styled.div`\n  margin-bottom: 8px;\n  font-size: 0.8em;\n  text-align: left;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  color: rgb(79, 79, 79);\n`\nconst StyledGridButton = styled(Grid)`\n  display: block;\n  width: 100%;\n`\nconst StyledButton = styled(Button)`\n  color: white;\n  margin: 100px;\n  @media (min-width: 500px) {\n    color: black;\n  }\n  .gitHubButton {\n    float: right;\n  }\n`\nconst StyledProjectLink = styled.a`\n  margin-top: 4px;\n  margin-bottom: 20px;\n  font-size: 0.7em;\n  display: block;\n  margin-top: 12px;\n  text-align: center;\n  text-transform: uppercase;\n  text-decoration: underline;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: black;\n  :hover > .webImage {\n    opacity: 0.5;\n  }\n\n  @media (min-width: 600px) {\n    font-size: 0.8em;\n    margin-top: 0;\n    :hover {\n      -webkit-transform: scale(1.1);\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link } from \"gatsby\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Container from \"@material-ui/core/Container\"\nimport styled from \"styled-components\"\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <Grid item md={3}>\n        <StyledNavLink to=\"/\" activeStyle={{ color: \"black\" }}>\n          Projects\n        </StyledNavLink>\n      </Grid>\n\n      <Grid item md={3}>\n        <StyledNavLink to=\"/about\" activeStyle={{ color: \"black\" }}>\n          About\n        </StyledNavLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"https://github.com/vt0826\">\n          GitHub\n        </StyledEmailLink>\n      </Grid>\n      <Grid item md={3}>\n        <StyledEmailLink href=\"mailto:vt0826@gmail.com\">\n          Contact\n        </StyledEmailLink>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <StyledGridContainer container>\n      <Grid item xs={12} sm={6} md={8} lg={9}>\n        <StyledNavLinkName to=\"/\">{siteTitle}</StyledNavLinkName>\n      </Grid>\n\n      <Grid item xs={12} sm={6} md={4} lg={3}>\n        <StyledGridHeaderLink\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          <NavBar />\n        </StyledGridHeaderLink>\n      </Grid>\n    </StyledGridContainer>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n\nconst StyledGridContainer = styled(Grid)`\n  margin-top: 40px;\n\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StyledGridHeaderLink = styled(Grid)`\n  width: 100%;\n  direction: row;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StyledNavLinkName = styled(Link)`\n  color: black;\n  display: inline;\n  align: left;\n  font-size: 0.7em;\n  line-height: 1.6em;\n  text-transform: uppercase;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  @media (min-width: 600px) {\n    font-size: 1em;\n  }\n`\nconst StyledNavLink = styled(Link)`\n  margin-top: 12px;\n  font-size: 0.7em;\n  display: block;\n  margin-top: 12px;\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 600px) {\n    font-size: 1em;\n    margin-top: 0;\n    :hover {\n      -webkit-transform: scale(1.1);\n    }\n  }\n`\nconst StyledEmailLink = styled.a`\n  margin-top: 12px;\n  font-size: 0.7em;\n  display: block;\n  text-align: right;\n  text-transform: none;\n  text-decoration: none;\n  letter-spacing: 0.02em;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  color: #aaa;\n\n  @media (min-width: 600px) {\n    font-size: 1em;\n    margin-top: 0;\n    :hover {\n      -webkit-transform: scale(1.1);\n    }\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled from \"styled-components\"\nimport { Container } from \"@material-ui/core\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Container maxWidth=\"lg\">\n          <Header siteTitle={data.site.siteMetadata.title} />\n        </Container>\n\n        <main>\n          <Container maxWidth=\"lg\"> {children}</Container>\n        </main>\n        <footer>\n          <Container maxWidth=\"lg\">\n            <StyledFooterText>\n              © {new Date().getFullYear()}, Developed By Victor Tsay\n            </StyledFooterText>\n          </Container>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\nconst StyledFooterText = styled.h6`\n  margin-top: 20px;\n  font-size: 0.8em;\n  text-align: left;\n  line-height: 1.6em;\n  text-transform: capitalize;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  font-weight: 400;\n  font-style: normal;\n  font-family: \"Open Sans\", sans-serif;\n  color: black;\n`\n","module.exports = __webpack_public_path__ + \"static/order-a2806e7f4ed63708dc7a94b864b67911.png\";","module.exports = __webpack_public_path__ + \"static/property-349867cd91f96600e47568ec28efad3b.png\";","module.exports = __webpack_public_path__ + \"static/inventory-27dc3a6cbe2c7b6d83a6d3a29a017aed.png\";","module.exports = __webpack_public_path__ + \"static/catmint-eeea1650810e7d91383a98d78ee1453b.png\";"],"sourceRoot":""}